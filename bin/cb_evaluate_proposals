#!/usr/bin/env python3

import torch
from fargv import fargv
import sys
import PIL
import pickle
import cbbin
from cbbin import *
from matplotlib import pyplot as plt
import time
import tqdm

import torchvision

from PIL import Image, ImageFile
ImageFile.LOAD_TRUNCATED_IMAGES = True

import cbsegm


p = {
    "proposals":set([]),
    "gt":set([]),
    "iou_threshold":.7
}

if __name__ == "__main__":
    p,_= fargv(p)
    id_to_gt={f[f.rfind("/")+1:].split(".")[0] :f for f in p.gt}
    id_to_proposals={f[f.rfind("/")+1:].split(".")[0] :f for f in p.proposals}
    assert set(id_to_gt.keys())==   set(id_to_proposals.keys())
    precisions = []
    recalls= []

    for id in tqdm.tqdm(id_to_proposals.keys()):
        gt_boxes,_ = cbsegm.load_annotator_json_words(id_to_gt[id])
        proposal_boxes,_ = cbsegm.load_annotator_json_words(id_to_proposals[id])
        intersection, union = cbsegm.get_inter_union(proposal_boxes, gt_boxes)
        iou = intersection/(.000001+union)
        precisions.append(iou.max(axis=1))
        recalls.append(iou.max(axis=0))
    precisions = np.concatenate(precisions,axis=0)
    recalls = np.concatenate(recalls, axis=0)
    print(f"# Proposals: {precisions.shape[0]}, # True: {recalls.shape[0]}")
    for thr in [.5, .75,.9]:
        precision = (precisions>thr).mean()*100
        recall = (recalls > thr).mean()*100
        fm = (2*precision*recall)/(.00001+precision+recall)
        print(f"Thr {thr:.5}:  FM {fm:.5}  Pr. {precision:.5} Rec. {recall:.5}")

